# Copyright (c) 2023 Matthias Wolf, Mawosoft.

<#
.SYNOPSIS
    Converts markdown help generated by platyPS to markdown for use with DocFx.

.DESCRIPTION
    The conversion adjusts for HTML formatting capabilities of DocFx, e.g. the yml code of
    parameter properties is converted into a table.

.NOTES
    TODO the actual conversion.
    Either read the markdown or use platyPS\New-YamlHelp as intermediate step.
#>

#Requires -Version 7

using namespace System

[CmdletBinding()]
param(
    # Source directory containing the markdown help file(s) created by platyPS
    [Parameter(Mandatory = $false, Position = 0)]
    [ValidateNotNullOrEmpty()]
    [string]$Path = "$PSScriptRoot/../docs/help",

    # Destination directory for converted markdown files.
    [Parameter(Mandatory = $false, Position = 1)]
    [ValidateNotNullOrEmpty()]
    [string]$Destination = "$PSScriptRoot/../docs/reference",

    # Always write to output file, even if content is unchanged.
    [switch]$WriteAlways
)

Set-StrictMode -Version 3.0
$ErrorActionPreference = 'Stop'

if (-not (Test-Path $Path -PathType Container)) {
    throw "Directory does not exist: $Path"
}
if (-not (Test-Path $Destination -PathType Container)) {
    throw "Directory does not exist: $Destination"
}

Join-Path $Path '*.md' | Get-ChildItem | ForEach-Object {
    [string]$content = Get-Content -Path $_ -Raw
    # TODO convert
    [string]$destinationFile = Join-Path $Destination $_.Name
    if ($WriteAlways -or -not (Test-Path $destinationFile -PathType Leaf) -or 
        -not $content.Equals((Get-Content $destinationFile -Raw), [StringComparison]::Ordinal)) {
        $content | Set-Content -Path $destinationFile
    }
}
